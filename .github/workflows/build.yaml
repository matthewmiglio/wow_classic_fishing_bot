name: Build and Release Project

on:
  push:
    tags:
      - "v*.*.*"  # Matches version tags like v0.01, v0.02, v1.0.0, etc.

permissions:
  contents: write

jobs:
  build:
    name: Build and Release Package
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: |
          pipx install "poetry>=1.7.0"
          pipx install poethepoet

      - name: Set up Python
        id: pysetup
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify your required Python version
          cache: 'poetry'  # Cache poetry dependencies for faster builds

      - name: Install dependencies with Poetry
        run: |
          poetry install

      - name: Run build script with Poetry
        run: |
          poetry run python build.py  # Run your build script under Poetry's environment

      - name: Build package
        run: |
          poetry build -v  # Adjust as needed to build your package with poetry

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build  # Upload the build folder as an artifact, if needed

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}  # The tag name that triggered the workflow
          release_name: Release ${{ github.ref }}  # The release name (can be customized)
          body: 'Automated release generated by GitHub Actions.'  # The release description
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub automatically provides this token
