name: Build Project

on:
  push:
    tags:
      - 'v*.*.*'  # Matches version tags like v0.01, v0.02, v1.0.0, etc.

jobs:
  build:
    runs-on: windows-latest  # You can change this to ubuntu-latest or macos-latest if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify your required Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Assuming you have a requirements.txt file

      - name: Run the build script
        run: |
          python build.py  # This will execute your build script

      - name: Clean up
        run: |
          if (Test-Path "build") {
            Remove-Item -Recurse -Force "build"
          }

      - name: Upload build artifacts (optional)
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build  # Upload the build folder as an artifact, if needed

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1  # Corrected action reference
        with:
          tag_name: ${{ github.ref }}  # The tag name that triggered the workflow
          release_name: Release ${{ github.ref }}  # The release name (can be customized)
          body: 'Automated release generated by GitHub Actions.'  # The release description
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_SECRET }}  # GitHub automatically provides this token
